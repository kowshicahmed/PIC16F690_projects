;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11/11/2013 6:17:45 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2888      	GOTO       136
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A9      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AA      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;MyProject.c,25 :: 		void interrupt(void)
;MyProject.c,27 :: 		if(RCIF_bit==1 )  // If UART Rx Interrupt
0x000D	0x1E8C      	BTFSS      RCIF_bit, BitPos(RCIF_bit+0)
0x000E	0x2853      	GOTO       L_interrupt0
;MyProject.c,29 :: 		if(OERR_bit ) // If over run error, then reset the receiver
0x000F	0x1C98      	BTFSS      OERR_bit, BitPos(OERR_bit+0)
0x0010	0x2813      	GOTO       L_interrupt1
;MyProject.c,31 :: 		CREN_bit  = 0;
0x0011	0x1218      	BCF        CREN_bit, BitPos(CREN_bit+0)
;MyProject.c,32 :: 		CREN_bit  = 1;
0x0012	0x1618      	BSF        CREN_bit, BitPos(CREN_bit+0)
;MyProject.c,33 :: 		}
L_interrupt1:
;MyProject.c,34 :: 		rcv=RCREG;             // save the data in rcv
0x0013	0x081A      	MOVF       RCREG, 0
0x0014	0x00A1      	MOVWF      _rcv
;MyProject.c,35 :: 		if(rcv==0x77)           //filtering process
0x0015	0x0821      	MOVF       _rcv, 0
0x0016	0x3A77      	XORLW      119
0x0017	0x1D03      	BTFSS      STATUS, 2
0x0018	0x281C      	GOTO       L_interrupt2
;MyProject.c,36 :: 		{rcv1=rcv;
0x0019	0x0821      	MOVF       _rcv, 0
0x001A	0x00A4      	MOVWF      _rcv1
;MyProject.c,37 :: 		}
0x001B	0x2853      	GOTO       L_interrupt3
L_interrupt2:
;MyProject.c,38 :: 		else if (rcv==0x61)
0x001C	0x0821      	MOVF       _rcv, 0
0x001D	0x3A61      	XORLW      97
0x001E	0x1D03      	BTFSS      STATUS, 2
0x001F	0x2823      	GOTO       L_interrupt4
;MyProject.c,39 :: 		{rcv1=rcv;
0x0020	0x0821      	MOVF       _rcv, 0
0x0021	0x00A4      	MOVWF      _rcv1
;MyProject.c,40 :: 		}
0x0022	0x2853      	GOTO       L_interrupt5
L_interrupt4:
;MyProject.c,41 :: 		else if (rcv==0x73)
0x0023	0x0821      	MOVF       _rcv, 0
0x0024	0x3A73      	XORLW      115
0x0025	0x1D03      	BTFSS      STATUS, 2
0x0026	0x282A      	GOTO       L_interrupt6
;MyProject.c,42 :: 		{rcv1=rcv;
0x0027	0x0821      	MOVF       _rcv, 0
0x0028	0x00A4      	MOVWF      _rcv1
;MyProject.c,43 :: 		}
0x0029	0x2853      	GOTO       L_interrupt7
L_interrupt6:
;MyProject.c,44 :: 		else if (rcv==0x64)
0x002A	0x0821      	MOVF       _rcv, 0
0x002B	0x3A64      	XORLW      100
0x002C	0x1D03      	BTFSS      STATUS, 2
0x002D	0x2831      	GOTO       L_interrupt8
;MyProject.c,45 :: 		{rcv1=rcv;
0x002E	0x0821      	MOVF       _rcv, 0
0x002F	0x00A4      	MOVWF      _rcv1
;MyProject.c,46 :: 		}
0x0030	0x2853      	GOTO       L_interrupt9
L_interrupt8:
;MyProject.c,47 :: 		else if (rcv==0x71)
0x0031	0x0821      	MOVF       _rcv, 0
0x0032	0x3A71      	XORLW      113
0x0033	0x1D03      	BTFSS      STATUS, 2
0x0034	0x2838      	GOTO       L_interrupt10
;MyProject.c,48 :: 		{rcv1=rcv;
0x0035	0x0821      	MOVF       _rcv, 0
0x0036	0x00A4      	MOVWF      _rcv1
;MyProject.c,49 :: 		}
0x0037	0x2853      	GOTO       L_interrupt11
L_interrupt10:
;MyProject.c,50 :: 		else if (rcv==0x65)
0x0038	0x0821      	MOVF       _rcv, 0
0x0039	0x3A65      	XORLW      101
0x003A	0x1D03      	BTFSS      STATUS, 2
0x003B	0x283F      	GOTO       L_interrupt12
;MyProject.c,51 :: 		{rcv1=rcv;
0x003C	0x0821      	MOVF       _rcv, 0
0x003D	0x00A4      	MOVWF      _rcv1
;MyProject.c,52 :: 		}
0x003E	0x2853      	GOTO       L_interrupt13
L_interrupt12:
;MyProject.c,53 :: 		else if (rcv==0x31)
0x003F	0x0821      	MOVF       _rcv, 0
0x0040	0x3A31      	XORLW      49
0x0041	0x1D03      	BTFSS      STATUS, 2
0x0042	0x2846      	GOTO       L_interrupt14
;MyProject.c,54 :: 		{rcv1=rcv;
0x0043	0x0821      	MOVF       _rcv, 0
0x0044	0x00A4      	MOVWF      _rcv1
;MyProject.c,55 :: 		}
0x0045	0x2853      	GOTO       L_interrupt15
L_interrupt14:
;MyProject.c,56 :: 		else if (rcv==0x32)
0x0046	0x0821      	MOVF       _rcv, 0
0x0047	0x3A32      	XORLW      50
0x0048	0x1D03      	BTFSS      STATUS, 2
0x0049	0x284D      	GOTO       L_interrupt16
;MyProject.c,57 :: 		{rcv1=rcv;
0x004A	0x0821      	MOVF       _rcv, 0
0x004B	0x00A4      	MOVWF      _rcv1
;MyProject.c,58 :: 		}
0x004C	0x2853      	GOTO       L_interrupt17
L_interrupt16:
;MyProject.c,59 :: 		else if (rcv==0x66)
0x004D	0x0821      	MOVF       _rcv, 0
0x004E	0x3A66      	XORLW      102
0x004F	0x1D03      	BTFSS      STATUS, 2
0x0050	0x2853      	GOTO       L_interrupt18
;MyProject.c,60 :: 		{rcv1=rcv;
0x0051	0x0821      	MOVF       _rcv, 0
0x0052	0x00A4      	MOVWF      _rcv1
;MyProject.c,61 :: 		}
L_interrupt18:
L_interrupt17:
L_interrupt15:
L_interrupt13:
L_interrupt11:
L_interrupt9:
L_interrupt7:
L_interrupt5:
L_interrupt3:
;MyProject.c,63 :: 		}
L_interrupt0:
;MyProject.c,64 :: 		}
L_end_interrupt:
L__interrupt73:
0x0053	0x0820      	MOVF       32, 0
0x0054	0x00F0      	MOVWF      R0
0x0055	0x082A      	MOVF       ___savePCLATH, 0
0x0056	0x008A      	MOVWF      PCLATH
0x0057	0x0E29      	SWAPF      ___saveSTATUS, 0
0x0058	0x0083      	MOVWF      STATUS
0x0059	0x0EFF      	SWAPF      R15, 1
0x005A	0x0E7F      	SWAPF      R15, 0
0x005B	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x005C	0x1283      	BCF        STATUS, 5
0x005D	0x1303      	BCF        STATUS, 6
0x005E	0x0823      	MOVF       ___DoICPAddr+1, 0
0x005F	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0060	0x0822      	MOVF       ___DoICPAddr, 0
0x0061	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0062	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0063	0x205C      	CALL       _____DoICP
0x0064	0x118A      	BCF        PCLATH, 3
0x0065	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0066	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0067	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0068	0x0AA2      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0069	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x006A	0x0AA3      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x006B	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x006C	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x006D	0x2863      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x006E	0x0008      	RETURN
; end of ___CC2DW
_InitUART:
;MyProject.c,7 :: 		void InitUART(void)
;MyProject.c,8 :: 		{   ANSEL=0;                 // disable analog input
0x006F	0x1283      	BCF        STATUS, 5
0x0070	0x1703      	BSF        STATUS, 6
0x0071	0x019E      	CLRF       ANSEL
;MyProject.c,9 :: 		ANSELH=0;               // disable analog input
0x0072	0x019F      	CLRF       ANSELH
;MyProject.c,10 :: 		ANS11_bit =0;
0x0073	0x119F      	BCF        ANS11_bit, BitPos(ANS11_bit+0)
;MyProject.c,12 :: 		SPBRG = 103  ;         // selected 2400 baud-rate
0x0074	0x3067      	MOVLW      103
0x0075	0x1683      	BSF        STATUS, 5
0x0076	0x1303      	BCF        STATUS, 6
0x0077	0x0099      	MOVWF      SPBRG
;MyProject.c,13 :: 		BRGH_bit   = 1;        // RX Pin
0x0078	0x1518      	BSF        BRGH_bit, BitPos(BRGH_bit+0)
;MyProject.c,14 :: 		SYNC_bit =0;           // Asynchronous Operation
0x0079	0x1218      	BCF        SYNC_bit, BitPos(SYNC_bit+0)
;MyProject.c,15 :: 		SPEN_bit   = 1;        // Enable serial port pins
0x007A	0x1283      	BCF        STATUS, 5
0x007B	0x1798      	BSF        SPEN_bit, BitPos(SPEN_bit+0)
;MyProject.c,16 :: 		CREN_bit   = 1;        // Enable reception
0x007C	0x1618      	BSF        CREN_bit, BitPos(CREN_bit+0)
;MyProject.c,17 :: 		SREN_bit   = 0;        // No effect
0x007D	0x1298      	BCF        SREN_bit, BitPos(SREN_bit+0)
;MyProject.c,18 :: 		TXIE_bit   = 0;        // Disable tx interrupts
0x007E	0x1683      	BSF        STATUS, 5
0x007F	0x120C      	BCF        TXIE_bit, BitPos(TXIE_bit+0)
;MyProject.c,19 :: 		RCIE_bit   = 1;        // Enable rx interrupts
0x0080	0x168C      	BSF        RCIE_bit, BitPos(RCIE_bit+0)
;MyProject.c,20 :: 		TX9_bit    = 0;        // 8-bit transmission
0x0081	0x1318      	BCF        TX9_bit, BitPos(TX9_bit+0)
;MyProject.c,21 :: 		RX9_bit    = 0;        // 8-bit reception
0x0082	0x1283      	BCF        STATUS, 5
0x0083	0x1318      	BCF        RX9_bit, BitPos(RX9_bit+0)
;MyProject.c,22 :: 		TXEN_bit   = 0;        // Reset transmitter
0x0084	0x1683      	BSF        STATUS, 5
0x0085	0x1298      	BCF        TXEN_bit, BitPos(TXEN_bit+0)
;MyProject.c,23 :: 		TXEN_bit   = 1;        // Enable the transmitter
0x0086	0x1698      	BSF        TXEN_bit, BitPos(TXEN_bit+0)
;MyProject.c,24 :: 		}
L_end_InitUART:
0x0087	0x0008      	RETURN
; end of _InitUART
_main:
0x0088	0x1283      	BCF        STATUS, 5
0x0089	0x1303      	BCF        STATUS, 6
0x008A	0x01A1      	CLRF       _rcv
;MyProject.c,65 :: 		void main(void)
;MyProject.c,66 :: 		{TRISB=0b00100000;        //declared RB5_bit as input which is the uart RX pin
0x008B	0x3020      	MOVLW      32
0x008C	0x1683      	BSF        STATUS, 5
0x008D	0x0086      	MOVWF      TRISB
;MyProject.c,67 :: 		TRISA=0X00;
0x008E	0x0185      	CLRF       TRISA
;MyProject.c,68 :: 		TRISC=0X00;
0x008F	0x0187      	CLRF       TRISC
;MyProject.c,69 :: 		PORTC=0X00;
0x0090	0x1283      	BCF        STATUS, 5
0x0091	0x0187      	CLRF       PORTC
;MyProject.c,70 :: 		PORTB=0X00;
0x0092	0x0186      	CLRF       PORTB
;MyProject.c,71 :: 		count=0;
0x0093	0x01A7      	CLRF       _count
0x0094	0x01A8      	CLRF       _count+1
;MyProject.c,72 :: 		count1=0;
0x0095	0x01A5      	CLRF       _count1
0x0096	0x01A6      	CLRF       _count1+1
;MyProject.c,74 :: 		InitUART();        // Intialize UART
0x0097	0x206F      	CALL       _InitUART
;MyProject.c,77 :: 		GIE_bit  = 1;       // Enable global interrupts
0x0098	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;MyProject.c,78 :: 		PEIE_bit  = 1;         // Enable Peripheral Interrupts
0x0099	0x170B      	BSF        PEIE_bit, BitPos(PEIE_bit+0)
;MyProject.c,80 :: 		while(1)
L_main19:
;MyProject.c,82 :: 		while(rcv1==0x00){
L_main21:
0x009A	0x1283      	BCF        STATUS, 5
0x009B	0x0824      	MOVF       _rcv1, 0
0x009C	0x3A00      	XORLW      0
0x009D	0x1D03      	BTFSS      STATUS, 2
0x009E	0x28A0      	GOTO       L_main22
;MyProject.c,83 :: 		}
0x009F	0x289A      	GOTO       L_main21
L_main22:
;MyProject.c,84 :: 		if(rcv1==0x77){         //if rcv=w(0x77)
0x00A0	0x0824      	MOVF       _rcv1, 0
0x00A1	0x3A77      	XORLW      119
0x00A2	0x1D03      	BTFSS      STATUS, 2
0x00A3	0x28A7      	GOTO       L_main23
;MyProject.c,85 :: 		PORTC=0b00000101;      //both motors will rotate in foreward direction
0x00A4	0x3005      	MOVLW      5
0x00A5	0x0087      	MOVWF      PORTC
;MyProject.c,87 :: 		}
0x00A6	0x2A10      	GOTO       L_main24
L_main23:
;MyProject.c,88 :: 		else if(rcv1==0x73){    //if rcv=s(0x73)
0x00A7	0x0824      	MOVF       _rcv1, 0
0x00A8	0x3A73      	XORLW      115
0x00A9	0x1D03      	BTFSS      STATUS, 2
0x00AA	0x28AE      	GOTO       L_main25
;MyProject.c,89 :: 		PORTC=0b00001010;      //both motors will in backward direction
0x00AB	0x300A      	MOVLW      10
0x00AC	0x0087      	MOVWF      PORTC
;MyProject.c,90 :: 		}
0x00AD	0x2A10      	GOTO       L_main26
L_main25:
;MyProject.c,91 :: 		else if(rcv1==0x61){   //if rcv=a(0x61)
0x00AE	0x0824      	MOVF       _rcv1, 0
0x00AF	0x3A61      	XORLW      97
0x00B0	0x1D03      	BTFSS      STATUS, 2
0x00B1	0x28B5      	GOTO       L_main27
;MyProject.c,92 :: 		PORTC=0b00000100;   //left motor will be stopped right motor will rotate foreward
0x00B2	0x3004      	MOVLW      4
0x00B3	0x0087      	MOVWF      PORTC
;MyProject.c,93 :: 		}
0x00B4	0x2A10      	GOTO       L_main28
L_main27:
;MyProject.c,94 :: 		else if(rcv1==0x64){   //if rcv=d(0x64)
0x00B5	0x0824      	MOVF       _rcv1, 0
0x00B6	0x3A64      	XORLW      100
0x00B7	0x1D03      	BTFSS      STATUS, 2
0x00B8	0x28BC      	GOTO       L_main29
;MyProject.c,95 :: 		PORTC=0b00000001;     //right motor will be stopped left motor will rotate foreward
0x00B9	0x3001      	MOVLW      1
0x00BA	0x0087      	MOVWF      PORTC
;MyProject.c,96 :: 		}
0x00BB	0x2A10      	GOTO       L_main30
L_main29:
;MyProject.c,97 :: 		else if(rcv1==0x65){    //if rcv=e(0x65)
0x00BC	0x0824      	MOVF       _rcv1, 0
0x00BD	0x3A65      	XORLW      101
0x00BE	0x1D03      	BTFSS      STATUS, 2
0x00BF	0x28C3      	GOTO       L_main31
;MyProject.c,98 :: 		PORTC=0b00100101;       //moving forward and digging
0x00C0	0x3025      	MOVLW      37
0x00C1	0x0087      	MOVWF      PORTC
;MyProject.c,99 :: 		}
0x00C2	0x2A10      	GOTO       L_main32
L_main31:
;MyProject.c,100 :: 		else if(rcv1==0x71){     //if rcv=q(0x671)
0x00C3	0x0824      	MOVF       _rcv1, 0
0x00C4	0x3A71      	XORLW      113
0x00C5	0x1D03      	BTFSS      STATUS, 2
0x00C6	0x28CA      	GOTO       L_main33
;MyProject.c,101 :: 		PORTC=0b00100000;        //only digging
0x00C7	0x3020      	MOVLW      32
0x00C8	0x0087      	MOVWF      PORTC
;MyProject.c,102 :: 		}
0x00C9	0x2A10      	GOTO       L_main34
L_main33:
;MyProject.c,104 :: 		else if (rcv1==0x31 && count==0)     //if "1" is pressed the stepper will have half rotation in the front
0x00CA	0x0824      	MOVF       _rcv1, 0
0x00CB	0x3A31      	XORLW      49
0x00CC	0x1D03      	BTFSS      STATUS, 2
0x00CD	0x291C      	GOTO       L_main37
0x00CE	0x3000      	MOVLW      0
0x00CF	0x0628      	XORWF      _count+1, 0
0x00D0	0x1D03      	BTFSS      STATUS, 2
0x00D1	0x28D4      	GOTO       L__main75
0x00D2	0x3000      	MOVLW      0
0x00D3	0x0627      	XORWF      _count, 0
L__main75:
0x00D4	0x1D03      	BTFSS      STATUS, 2
0x00D5	0x291C      	GOTO       L_main37
L__main70:
;MyProject.c,109 :: 		PORTA=0b00000011;
0x00D6	0x3003      	MOVLW      3
0x00D7	0x0085      	MOVWF      PORTA
;MyProject.c,110 :: 		Delay_ms(1000);
0x00D8	0x3006      	MOVLW      6
0x00D9	0x00FB      	MOVWF      R11
0x00DA	0x3013      	MOVLW      19
0x00DB	0x00FC      	MOVWF      R12
0x00DC	0x30AD      	MOVLW      173
0x00DD	0x00FD      	MOVWF      R13
L_main38:
0x00DE	0x0BFD      	DECFSZ     R13, 1
0x00DF	0x28DE      	GOTO       L_main38
0x00E0	0x0BFC      	DECFSZ     R12, 1
0x00E1	0x28DE      	GOTO       L_main38
0x00E2	0x0BFB      	DECFSZ     R11, 1
0x00E3	0x28DE      	GOTO       L_main38
0x00E4	0x0000      	NOP
0x00E5	0x0000      	NOP
;MyProject.c,112 :: 		PORTA=0b00000010;
0x00E6	0x3002      	MOVLW      2
0x00E7	0x0085      	MOVWF      PORTA
;MyProject.c,113 :: 		Delay_ms(1000);
0x00E8	0x3006      	MOVLW      6
0x00E9	0x00FB      	MOVWF      R11
0x00EA	0x3013      	MOVLW      19
0x00EB	0x00FC      	MOVWF      R12
0x00EC	0x30AD      	MOVLW      173
0x00ED	0x00FD      	MOVWF      R13
L_main39:
0x00EE	0x0BFD      	DECFSZ     R13, 1
0x00EF	0x28EE      	GOTO       L_main39
0x00F0	0x0BFC      	DECFSZ     R12, 1
0x00F1	0x28EE      	GOTO       L_main39
0x00F2	0x0BFB      	DECFSZ     R11, 1
0x00F3	0x28EE      	GOTO       L_main39
0x00F4	0x0000      	NOP
0x00F5	0x0000      	NOP
;MyProject.c,114 :: 		PORTA=0b00000110;
0x00F6	0x3006      	MOVLW      6
0x00F7	0x0085      	MOVWF      PORTA
;MyProject.c,115 :: 		Delay_ms(1000);
0x00F8	0x3006      	MOVLW      6
0x00F9	0x00FB      	MOVWF      R11
0x00FA	0x3013      	MOVLW      19
0x00FB	0x00FC      	MOVWF      R12
0x00FC	0x30AD      	MOVLW      173
0x00FD	0x00FD      	MOVWF      R13
L_main40:
0x00FE	0x0BFD      	DECFSZ     R13, 1
0x00FF	0x28FE      	GOTO       L_main40
0x0100	0x0BFC      	DECFSZ     R12, 1
0x0101	0x28FE      	GOTO       L_main40
0x0102	0x0BFB      	DECFSZ     R11, 1
0x0103	0x28FE      	GOTO       L_main40
0x0104	0x0000      	NOP
0x0105	0x0000      	NOP
;MyProject.c,116 :: 		PORTA=0b00000100;
0x0106	0x3004      	MOVLW      4
0x0107	0x0085      	MOVWF      PORTA
;MyProject.c,117 :: 		Delay_ms(1000);
0x0108	0x3006      	MOVLW      6
0x0109	0x00FB      	MOVWF      R11
0x010A	0x3013      	MOVLW      19
0x010B	0x00FC      	MOVWF      R12
0x010C	0x30AD      	MOVLW      173
0x010D	0x00FD      	MOVWF      R13
L_main41:
0x010E	0x0BFD      	DECFSZ     R13, 1
0x010F	0x290E      	GOTO       L_main41
0x0110	0x0BFC      	DECFSZ     R12, 1
0x0111	0x290E      	GOTO       L_main41
0x0112	0x0BFB      	DECFSZ     R11, 1
0x0113	0x290E      	GOTO       L_main41
0x0114	0x0000      	NOP
0x0115	0x0000      	NOP
;MyProject.c,118 :: 		rcv1=0x00;
0x0116	0x01A4      	CLRF       _rcv1
;MyProject.c,119 :: 		count=1;
0x0117	0x3001      	MOVLW      1
0x0118	0x00A7      	MOVWF      _count
0x0119	0x3000      	MOVLW      0
0x011A	0x00A8      	MOVWF      _count+1
;MyProject.c,120 :: 		}
0x011B	0x2A10      	GOTO       L_main42
L_main37:
;MyProject.c,121 :: 		else if(rcv1==0x31 && count==1)       //if "1" is pressed again the stepper will have another half rotation in the front
0x011C	0x0824      	MOVF       _rcv1, 0
0x011D	0x3A31      	XORLW      49
0x011E	0x1D03      	BTFSS      STATUS, 2
0x011F	0x296C      	GOTO       L_main45
0x0120	0x3000      	MOVLW      0
0x0121	0x0628      	XORWF      _count+1, 0
0x0122	0x1D03      	BTFSS      STATUS, 2
0x0123	0x2926      	GOTO       L__main76
0x0124	0x3001      	MOVLW      1
0x0125	0x0627      	XORWF      _count, 0
L__main76:
0x0126	0x1D03      	BTFSS      STATUS, 2
0x0127	0x296C      	GOTO       L_main45
L__main69:
;MyProject.c,123 :: 		PORTA=0b00010100;
0x0128	0x3014      	MOVLW      20
0x0129	0x0085      	MOVWF      PORTA
;MyProject.c,124 :: 		Delay_ms(1000);
0x012A	0x3006      	MOVLW      6
0x012B	0x00FB      	MOVWF      R11
0x012C	0x3013      	MOVLW      19
0x012D	0x00FC      	MOVWF      R12
0x012E	0x30AD      	MOVLW      173
0x012F	0x00FD      	MOVWF      R13
L_main46:
0x0130	0x0BFD      	DECFSZ     R13, 1
0x0131	0x2930      	GOTO       L_main46
0x0132	0x0BFC      	DECFSZ     R12, 1
0x0133	0x2930      	GOTO       L_main46
0x0134	0x0BFB      	DECFSZ     R11, 1
0x0135	0x2930      	GOTO       L_main46
0x0136	0x0000      	NOP
0x0137	0x0000      	NOP
;MyProject.c,126 :: 		PORTA=0b00010000;
0x0138	0x3010      	MOVLW      16
0x0139	0x0085      	MOVWF      PORTA
;MyProject.c,127 :: 		Delay_ms(1000);
0x013A	0x3006      	MOVLW      6
0x013B	0x00FB      	MOVWF      R11
0x013C	0x3013      	MOVLW      19
0x013D	0x00FC      	MOVWF      R12
0x013E	0x30AD      	MOVLW      173
0x013F	0x00FD      	MOVWF      R13
L_main47:
0x0140	0x0BFD      	DECFSZ     R13, 1
0x0141	0x2940      	GOTO       L_main47
0x0142	0x0BFC      	DECFSZ     R12, 1
0x0143	0x2940      	GOTO       L_main47
0x0144	0x0BFB      	DECFSZ     R11, 1
0x0145	0x2940      	GOTO       L_main47
0x0146	0x0000      	NOP
0x0147	0x0000      	NOP
;MyProject.c,129 :: 		PORTA=0b00010001;
0x0148	0x3011      	MOVLW      17
0x0149	0x0085      	MOVWF      PORTA
;MyProject.c,130 :: 		Delay_ms(1000);
0x014A	0x3006      	MOVLW      6
0x014B	0x00FB      	MOVWF      R11
0x014C	0x3013      	MOVLW      19
0x014D	0x00FC      	MOVWF      R12
0x014E	0x30AD      	MOVLW      173
0x014F	0x00FD      	MOVWF      R13
L_main48:
0x0150	0x0BFD      	DECFSZ     R13, 1
0x0151	0x2950      	GOTO       L_main48
0x0152	0x0BFC      	DECFSZ     R12, 1
0x0153	0x2950      	GOTO       L_main48
0x0154	0x0BFB      	DECFSZ     R11, 1
0x0155	0x2950      	GOTO       L_main48
0x0156	0x0000      	NOP
0x0157	0x0000      	NOP
;MyProject.c,131 :: 		PORTA=0b00000001;
0x0158	0x3001      	MOVLW      1
0x0159	0x0085      	MOVWF      PORTA
;MyProject.c,132 :: 		Delay_ms(1000);
0x015A	0x3006      	MOVLW      6
0x015B	0x00FB      	MOVWF      R11
0x015C	0x3013      	MOVLW      19
0x015D	0x00FC      	MOVWF      R12
0x015E	0x30AD      	MOVLW      173
0x015F	0x00FD      	MOVWF      R13
L_main49:
0x0160	0x0BFD      	DECFSZ     R13, 1
0x0161	0x2960      	GOTO       L_main49
0x0162	0x0BFC      	DECFSZ     R12, 1
0x0163	0x2960      	GOTO       L_main49
0x0164	0x0BFB      	DECFSZ     R11, 1
0x0165	0x2960      	GOTO       L_main49
0x0166	0x0000      	NOP
0x0167	0x0000      	NOP
;MyProject.c,133 :: 		rcv1=0x00;
0x0168	0x01A4      	CLRF       _rcv1
;MyProject.c,134 :: 		count=0;
0x0169	0x01A7      	CLRF       _count
0x016A	0x01A8      	CLRF       _count+1
;MyProject.c,136 :: 		}
0x016B	0x2A10      	GOTO       L_main50
L_main45:
;MyProject.c,137 :: 		else if(rcv1==0x32 && count1==0)   //if "2" is pressed the stepper will have half rotation in the backward direction
0x016C	0x0824      	MOVF       _rcv1, 0
0x016D	0x3A32      	XORLW      50
0x016E	0x1D03      	BTFSS      STATUS, 2
0x016F	0x29BE      	GOTO       L_main53
0x0170	0x3000      	MOVLW      0
0x0171	0x0626      	XORWF      _count1+1, 0
0x0172	0x1D03      	BTFSS      STATUS, 2
0x0173	0x2976      	GOTO       L__main77
0x0174	0x3000      	MOVLW      0
0x0175	0x0625      	XORWF      _count1, 0
L__main77:
0x0176	0x1D03      	BTFSS      STATUS, 2
0x0177	0x29BE      	GOTO       L_main53
L__main68:
;MyProject.c,139 :: 		PORTA=0b00010001;
0x0178	0x3011      	MOVLW      17
0x0179	0x0085      	MOVWF      PORTA
;MyProject.c,140 :: 		Delay_ms(1000);
0x017A	0x3006      	MOVLW      6
0x017B	0x00FB      	MOVWF      R11
0x017C	0x3013      	MOVLW      19
0x017D	0x00FC      	MOVWF      R12
0x017E	0x30AD      	MOVLW      173
0x017F	0x00FD      	MOVWF      R13
L_main54:
0x0180	0x0BFD      	DECFSZ     R13, 1
0x0181	0x2980      	GOTO       L_main54
0x0182	0x0BFC      	DECFSZ     R12, 1
0x0183	0x2980      	GOTO       L_main54
0x0184	0x0BFB      	DECFSZ     R11, 1
0x0185	0x2980      	GOTO       L_main54
0x0186	0x0000      	NOP
0x0187	0x0000      	NOP
;MyProject.c,141 :: 		PORTA=0b00010000;
0x0188	0x3010      	MOVLW      16
0x0189	0x0085      	MOVWF      PORTA
;MyProject.c,142 :: 		Delay_ms(1000);
0x018A	0x3006      	MOVLW      6
0x018B	0x00FB      	MOVWF      R11
0x018C	0x3013      	MOVLW      19
0x018D	0x00FC      	MOVWF      R12
0x018E	0x30AD      	MOVLW      173
0x018F	0x00FD      	MOVWF      R13
L_main55:
0x0190	0x0BFD      	DECFSZ     R13, 1
0x0191	0x2990      	GOTO       L_main55
0x0192	0x0BFC      	DECFSZ     R12, 1
0x0193	0x2990      	GOTO       L_main55
0x0194	0x0BFB      	DECFSZ     R11, 1
0x0195	0x2990      	GOTO       L_main55
0x0196	0x0000      	NOP
0x0197	0x0000      	NOP
;MyProject.c,143 :: 		PORTA=0b00010100;
0x0198	0x3014      	MOVLW      20
0x0199	0x0085      	MOVWF      PORTA
;MyProject.c,144 :: 		Delay_ms(1000);
0x019A	0x3006      	MOVLW      6
0x019B	0x00FB      	MOVWF      R11
0x019C	0x3013      	MOVLW      19
0x019D	0x00FC      	MOVWF      R12
0x019E	0x30AD      	MOVLW      173
0x019F	0x00FD      	MOVWF      R13
L_main56:
0x01A0	0x0BFD      	DECFSZ     R13, 1
0x01A1	0x29A0      	GOTO       L_main56
0x01A2	0x0BFC      	DECFSZ     R12, 1
0x01A3	0x29A0      	GOTO       L_main56
0x01A4	0x0BFB      	DECFSZ     R11, 1
0x01A5	0x29A0      	GOTO       L_main56
0x01A6	0x0000      	NOP
0x01A7	0x0000      	NOP
;MyProject.c,145 :: 		PORTA=0b00000100;
0x01A8	0x3004      	MOVLW      4
0x01A9	0x0085      	MOVWF      PORTA
;MyProject.c,146 :: 		Delay_ms(1000);
0x01AA	0x3006      	MOVLW      6
0x01AB	0x00FB      	MOVWF      R11
0x01AC	0x3013      	MOVLW      19
0x01AD	0x00FC      	MOVWF      R12
0x01AE	0x30AD      	MOVLW      173
0x01AF	0x00FD      	MOVWF      R13
L_main57:
0x01B0	0x0BFD      	DECFSZ     R13, 1
0x01B1	0x29B0      	GOTO       L_main57
0x01B2	0x0BFC      	DECFSZ     R12, 1
0x01B3	0x29B0      	GOTO       L_main57
0x01B4	0x0BFB      	DECFSZ     R11, 1
0x01B5	0x29B0      	GOTO       L_main57
0x01B6	0x0000      	NOP
0x01B7	0x0000      	NOP
;MyProject.c,147 :: 		rcv1=0x00;
0x01B8	0x01A4      	CLRF       _rcv1
;MyProject.c,148 :: 		count1=1;
0x01B9	0x3001      	MOVLW      1
0x01BA	0x00A5      	MOVWF      _count1
0x01BB	0x3000      	MOVLW      0
0x01BC	0x00A6      	MOVWF      _count1+1
;MyProject.c,150 :: 		}
0x01BD	0x2A10      	GOTO       L_main58
L_main53:
;MyProject.c,151 :: 		else if(rcv1==0x32 && count1==1)     //if "2" is pressed again the stepper will have another half rotation in the backward direction
0x01BE	0x0824      	MOVF       _rcv1, 0
0x01BF	0x3A32      	XORLW      50
0x01C0	0x1D03      	BTFSS      STATUS, 2
0x01C1	0x2A0E      	GOTO       L_main61
0x01C2	0x3000      	MOVLW      0
0x01C3	0x0626      	XORWF      _count1+1, 0
0x01C4	0x1D03      	BTFSS      STATUS, 2
0x01C5	0x29C8      	GOTO       L__main78
0x01C6	0x3001      	MOVLW      1
0x01C7	0x0625      	XORWF      _count1, 0
L__main78:
0x01C8	0x1D03      	BTFSS      STATUS, 2
0x01C9	0x2A0E      	GOTO       L_main61
L__main67:
;MyProject.c,153 :: 		PORTA=0b00000110;
0x01CA	0x3006      	MOVLW      6
0x01CB	0x0085      	MOVWF      PORTA
;MyProject.c,154 :: 		Delay_ms(1000);
0x01CC	0x3006      	MOVLW      6
0x01CD	0x00FB      	MOVWF      R11
0x01CE	0x3013      	MOVLW      19
0x01CF	0x00FC      	MOVWF      R12
0x01D0	0x30AD      	MOVLW      173
0x01D1	0x00FD      	MOVWF      R13
L_main62:
0x01D2	0x0BFD      	DECFSZ     R13, 1
0x01D3	0x29D2      	GOTO       L_main62
0x01D4	0x0BFC      	DECFSZ     R12, 1
0x01D5	0x29D2      	GOTO       L_main62
0x01D6	0x0BFB      	DECFSZ     R11, 1
0x01D7	0x29D2      	GOTO       L_main62
0x01D8	0x0000      	NOP
0x01D9	0x0000      	NOP
;MyProject.c,155 :: 		PORTA=0b00000010;
0x01DA	0x3002      	MOVLW      2
0x01DB	0x0085      	MOVWF      PORTA
;MyProject.c,156 :: 		Delay_ms(1000);
0x01DC	0x3006      	MOVLW      6
0x01DD	0x00FB      	MOVWF      R11
0x01DE	0x3013      	MOVLW      19
0x01DF	0x00FC      	MOVWF      R12
0x01E0	0x30AD      	MOVLW      173
0x01E1	0x00FD      	MOVWF      R13
L_main63:
0x01E2	0x0BFD      	DECFSZ     R13, 1
0x01E3	0x29E2      	GOTO       L_main63
0x01E4	0x0BFC      	DECFSZ     R12, 1
0x01E5	0x29E2      	GOTO       L_main63
0x01E6	0x0BFB      	DECFSZ     R11, 1
0x01E7	0x29E2      	GOTO       L_main63
0x01E8	0x0000      	NOP
0x01E9	0x0000      	NOP
;MyProject.c,157 :: 		PORTA=0b00000011;
0x01EA	0x3003      	MOVLW      3
0x01EB	0x0085      	MOVWF      PORTA
;MyProject.c,158 :: 		Delay_ms(1000);
0x01EC	0x3006      	MOVLW      6
0x01ED	0x00FB      	MOVWF      R11
0x01EE	0x3013      	MOVLW      19
0x01EF	0x00FC      	MOVWF      R12
0x01F0	0x30AD      	MOVLW      173
0x01F1	0x00FD      	MOVWF      R13
L_main64:
0x01F2	0x0BFD      	DECFSZ     R13, 1
0x01F3	0x29F2      	GOTO       L_main64
0x01F4	0x0BFC      	DECFSZ     R12, 1
0x01F5	0x29F2      	GOTO       L_main64
0x01F6	0x0BFB      	DECFSZ     R11, 1
0x01F7	0x29F2      	GOTO       L_main64
0x01F8	0x0000      	NOP
0x01F9	0x0000      	NOP
;MyProject.c,159 :: 		PORTA=0b00000001;
0x01FA	0x3001      	MOVLW      1
0x01FB	0x0085      	MOVWF      PORTA
;MyProject.c,160 :: 		Delay_ms(1000);
0x01FC	0x3006      	MOVLW      6
0x01FD	0x00FB      	MOVWF      R11
0x01FE	0x3013      	MOVLW      19
0x01FF	0x00FC      	MOVWF      R12
0x0200	0x30AD      	MOVLW      173
0x0201	0x00FD      	MOVWF      R13
L_main65:
0x0202	0x0BFD      	DECFSZ     R13, 1
0x0203	0x2A02      	GOTO       L_main65
0x0204	0x0BFC      	DECFSZ     R12, 1
0x0205	0x2A02      	GOTO       L_main65
0x0206	0x0BFB      	DECFSZ     R11, 1
0x0207	0x2A02      	GOTO       L_main65
0x0208	0x0000      	NOP
0x0209	0x0000      	NOP
;MyProject.c,161 :: 		rcv1=0x00;
0x020A	0x01A4      	CLRF       _rcv1
;MyProject.c,162 :: 		count1=0;
0x020B	0x01A5      	CLRF       _count1
0x020C	0x01A6      	CLRF       _count1+1
;MyProject.c,163 :: 		}
0x020D	0x2A10      	GOTO       L_main66
L_main61:
;MyProject.c,167 :: 		{PORTC=0x00;           //brake for any other button
0x020E	0x0187      	CLRF       PORTC
;MyProject.c,168 :: 		PORTA=0x00;
0x020F	0x0185      	CLRF       PORTA
;MyProject.c,169 :: 		}
L_main66:
L_main58:
L_main50:
L_main42:
L_main34:
L_main32:
L_main30:
L_main28:
L_main26:
L_main24:
;MyProject.c,170 :: 		rcv1=0x00;
0x0210	0x01A4      	CLRF       _rcv1
;MyProject.c,173 :: 		}
0x0211	0x289A      	GOTO       L_main19
;MyProject.c,177 :: 		}
L_end_main:
0x0212	0x2A12      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [88]    _interrupt
0x005C       [7]    _____DoICP
0x0063      [12]    ___CC2DW
0x006F      [25]    _InitUART
0x0088     [395]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x000B       [0]    GIE_bit
0x000B       [0]    PEIE_bit
0x000C       [0]    RCIF_bit
0x0018       [0]    OERR_bit
0x0018       [0]    RX9_bit
0x0018       [0]    SPEN_bit
0x0018       [0]    CREN_bit
0x0018       [0]    SREN_bit
0x001A       [1]    RCREG
0x0021       [1]    _rcv
0x0022       [2]    ___DoICPAddr
0x0024       [1]    _rcv1
0x0025       [2]    _count1
0x0027       [2]    _count
0x0029       [1]    ___saveSTATUS
0x002A       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x008C       [0]    TXIE_bit
0x008C       [0]    RCIE_bit
0x0098       [0]    TXEN_bit
0x0098       [0]    SYNC_bit
0x0098       [0]    TX9_bit
0x0098       [0]    BRGH_bit
0x0099       [1]    SPBRG
0x011E       [1]    ANSEL
0x011F       [0]    ANS11_bit
0x011F       [1]    ANSELH
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_main66
  L__main67
  L__main68
  L__main69
  L__main70
  L_end_InitUART
  _InitUART
  L_end_interrupt
  _interrupt
  L__interrupt73
  L_end_main
  _main
  L__main75
  L__main76
  L__main77
  L__main78
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_main66
  L__main67
  L__main68
  L__main69
  L__main70
  L_end_InitUART
  _InitUART
  L_end_interrupt
  _interrupt
  L__interrupt73
  L_end_main
  _main
  L__main75
  L__main76
  L__main77
  L__main78
