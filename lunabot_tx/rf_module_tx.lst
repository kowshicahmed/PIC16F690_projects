;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11/11/2013 6:19:22 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2846      	GOTO       70
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A4      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A5      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;rf_module_tx.c,24 :: 		void interrupt(void)
;rf_module_tx.c,26 :: 		if(RCIF_bit==1 )  // If UART Rx Interrupt
0x000B	0x1E8C      	BTFSS      RCIF_bit, BitPos(RCIF_bit+0)
0x000C	0x2813      	GOTO       L_interrupt0
;rf_module_tx.c,28 :: 		if(OERR_bit ) // If over run error, then reset the receiver
0x000D	0x1C98      	BTFSS      OERR_bit, BitPos(OERR_bit+0)
0x000E	0x2811      	GOTO       L_interrupt1
;rf_module_tx.c,30 :: 		CREN_bit  = 0;
0x000F	0x1218      	BCF        CREN_bit, BitPos(CREN_bit+0)
;rf_module_tx.c,31 :: 		CREN_bit  = 1;
0x0010	0x1618      	BSF        CREN_bit, BitPos(CREN_bit+0)
;rf_module_tx.c,32 :: 		}
L_interrupt1:
;rf_module_tx.c,33 :: 		rcv=RCREG;             // save the data in rcv
0x0011	0x081A      	MOVF       RCREG, 0
0x0012	0x00A0      	MOVWF      _rcv
;rf_module_tx.c,35 :: 		}
L_interrupt0:
;rf_module_tx.c,36 :: 		}
L_end_interrupt:
L__interrupt23:
0x0013	0x0825      	MOVF       ___savePCLATH, 0
0x0014	0x008A      	MOVWF      PCLATH
0x0015	0x0E24      	SWAPF      ___saveSTATUS, 0
0x0016	0x0083      	MOVWF      STATUS
0x0017	0x0EFF      	SWAPF      R15, 1
0x0018	0x0E7F      	SWAPF      R15, 0
0x0019	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x001A	0x1283      	BCF        STATUS, 5
0x001B	0x1303      	BCF        STATUS, 6
0x001C	0x0822      	MOVF       ___DoICPAddr+1, 0
0x001D	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x001E	0x0821      	MOVF       ___DoICPAddr, 0
0x001F	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0020	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0021	0x201A      	CALL       _____DoICP
0x0022	0x118A      	BCF        PCLATH, 3
0x0023	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0024	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0025	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0026	0x0AA1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0027	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0028	0x0AA2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0029	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x002A	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x002B	0x2821      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x002C	0x0008      	RETURN
; end of ___CC2DW
_InitUART:
;rf_module_tx.c,6 :: 		void InitUART(void)
;rf_module_tx.c,7 :: 		{   ANSEL=0;                 // disable analog input
0x002D	0x1283      	BCF        STATUS, 5
0x002E	0x1703      	BSF        STATUS, 6
0x002F	0x019E      	CLRF       ANSEL
;rf_module_tx.c,8 :: 		ANSELH=0;               // disable analog input
0x0030	0x019F      	CLRF       ANSELH
;rf_module_tx.c,9 :: 		ANS11_bit =0;
0x0031	0x119F      	BCF        ANS11_bit, BitPos(ANS11_bit+0)
;rf_module_tx.c,11 :: 		SPBRG = 103  ;         // selected 2400 baud-rate
0x0032	0x3067      	MOVLW      103
0x0033	0x1683      	BSF        STATUS, 5
0x0034	0x1303      	BCF        STATUS, 6
0x0035	0x0099      	MOVWF      SPBRG
;rf_module_tx.c,12 :: 		BRGH_bit   = 1;        // RX Pin
0x0036	0x1518      	BSF        BRGH_bit, BitPos(BRGH_bit+0)
;rf_module_tx.c,13 :: 		SYNC_bit =0;           // Asynchronous Operation
0x0037	0x1218      	BCF        SYNC_bit, BitPos(SYNC_bit+0)
;rf_module_tx.c,14 :: 		SPEN_bit   = 1;        // Enable serial port pins
0x0038	0x1283      	BCF        STATUS, 5
0x0039	0x1798      	BSF        SPEN_bit, BitPos(SPEN_bit+0)
;rf_module_tx.c,15 :: 		CREN_bit   = 1;        // Enable reception
0x003A	0x1618      	BSF        CREN_bit, BitPos(CREN_bit+0)
;rf_module_tx.c,16 :: 		SREN_bit   = 0;        // No effect
0x003B	0x1298      	BCF        SREN_bit, BitPos(SREN_bit+0)
;rf_module_tx.c,17 :: 		TXIE_bit   = 0;        // Disable tx interrupts
0x003C	0x1683      	BSF        STATUS, 5
0x003D	0x120C      	BCF        TXIE_bit, BitPos(TXIE_bit+0)
;rf_module_tx.c,18 :: 		RCIE_bit   = 1;        // Enable rx interrupts
0x003E	0x168C      	BSF        RCIE_bit, BitPos(RCIE_bit+0)
;rf_module_tx.c,19 :: 		TX9_bit    = 0;        // 8-bit transmission
0x003F	0x1318      	BCF        TX9_bit, BitPos(TX9_bit+0)
;rf_module_tx.c,20 :: 		RX9_bit    = 0;        // 8-bit reception
0x0040	0x1283      	BCF        STATUS, 5
0x0041	0x1318      	BCF        RX9_bit, BitPos(RX9_bit+0)
;rf_module_tx.c,21 :: 		TXEN_bit   = 0;        // Reset transmitter
0x0042	0x1683      	BSF        STATUS, 5
0x0043	0x1298      	BCF        TXEN_bit, BitPos(TXEN_bit+0)
;rf_module_tx.c,22 :: 		TXEN_bit   = 1;        // Enable the transmitter
0x0044	0x1698      	BSF        TXEN_bit, BitPos(TXEN_bit+0)
;rf_module_tx.c,23 :: 		}
L_end_InitUART:
0x0045	0x0008      	RETURN
; end of _InitUART
_main:
0x0046	0x1283      	BCF        STATUS, 5
0x0047	0x1303      	BCF        STATUS, 6
0x0048	0x01A0      	CLRF       _rcv
;rf_module_tx.c,37 :: 		void main(void)
;rf_module_tx.c,38 :: 		{TRISB=0b00100000;        //declared RB5_bit as input which is the uart RX pin
0x0049	0x3020      	MOVLW      32
0x004A	0x1683      	BSF        STATUS, 5
0x004B	0x0086      	MOVWF      TRISB
;rf_module_tx.c,39 :: 		TRISA=0X00;
0x004C	0x0185      	CLRF       TRISA
;rf_module_tx.c,40 :: 		TRISC=0X00;
0x004D	0x0187      	CLRF       TRISC
;rf_module_tx.c,41 :: 		PORTC=0X00;
0x004E	0x1283      	BCF        STATUS, 5
0x004F	0x0187      	CLRF       PORTC
;rf_module_tx.c,42 :: 		PORTB=0X00;
0x0050	0x0186      	CLRF       PORTB
;rf_module_tx.c,44 :: 		InitUART();        // Intialize UART
0x0051	0x202D      	CALL       _InitUART
;rf_module_tx.c,47 :: 		GIE_bit  = 1;       // Enable global interrupts
0x0052	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;rf_module_tx.c,48 :: 		PEIE_bit  = 1;         // Enable Peripheral Interrupts
0x0053	0x170B      	BSF        PEIE_bit, BitPos(PEIE_bit+0)
;rf_module_tx.c,50 :: 		while(1)          //here the mcu will only transmit "w" "a" "s" "d" "q" "e" "1" "2" and "f" for brake operation
L_main2:
;rf_module_tx.c,51 :: 		{   if(rcv==0x77)
0x0054	0x1283      	BCF        STATUS, 5
0x0055	0x0820      	MOVF       _rcv, 0
0x0056	0x3A77      	XORLW      119
0x0057	0x1D03      	BTFSS      STATUS, 2
0x0058	0x285E      	GOTO       L_main4
;rf_module_tx.c,52 :: 		{rcv1=rcv;
0x0059	0x0820      	MOVF       _rcv, 0
0x005A	0x00A3      	MOVWF      _rcv1
;rf_module_tx.c,53 :: 		TXREG=rcv1;
0x005B	0x0820      	MOVF       _rcv, 0
0x005C	0x0099      	MOVWF      TXREG
;rf_module_tx.c,55 :: 		}
0x005D	0x28A5      	GOTO       L_main5
L_main4:
;rf_module_tx.c,56 :: 		else if (rcv==0x61)
0x005E	0x0820      	MOVF       _rcv, 0
0x005F	0x3A61      	XORLW      97
0x0060	0x1D03      	BTFSS      STATUS, 2
0x0061	0x2867      	GOTO       L_main6
;rf_module_tx.c,57 :: 		{rcv1=rcv;
0x0062	0x0820      	MOVF       _rcv, 0
0x0063	0x00A3      	MOVWF      _rcv1
;rf_module_tx.c,58 :: 		TXREG=rcv1;
0x0064	0x0820      	MOVF       _rcv, 0
0x0065	0x0099      	MOVWF      TXREG
;rf_module_tx.c,60 :: 		}
0x0066	0x28A5      	GOTO       L_main7
L_main6:
;rf_module_tx.c,61 :: 		else if (rcv==0x73)
0x0067	0x0820      	MOVF       _rcv, 0
0x0068	0x3A73      	XORLW      115
0x0069	0x1D03      	BTFSS      STATUS, 2
0x006A	0x2870      	GOTO       L_main8
;rf_module_tx.c,62 :: 		{rcv1=rcv;
0x006B	0x0820      	MOVF       _rcv, 0
0x006C	0x00A3      	MOVWF      _rcv1
;rf_module_tx.c,63 :: 		TXREG=rcv1;
0x006D	0x0820      	MOVF       _rcv, 0
0x006E	0x0099      	MOVWF      TXREG
;rf_module_tx.c,65 :: 		}
0x006F	0x28A5      	GOTO       L_main9
L_main8:
;rf_module_tx.c,66 :: 		else if (rcv==0x64)
0x0070	0x0820      	MOVF       _rcv, 0
0x0071	0x3A64      	XORLW      100
0x0072	0x1D03      	BTFSS      STATUS, 2
0x0073	0x2879      	GOTO       L_main10
;rf_module_tx.c,67 :: 		{rcv1=rcv;
0x0074	0x0820      	MOVF       _rcv, 0
0x0075	0x00A3      	MOVWF      _rcv1
;rf_module_tx.c,68 :: 		TXREG=rcv1;
0x0076	0x0820      	MOVF       _rcv, 0
0x0077	0x0099      	MOVWF      TXREG
;rf_module_tx.c,70 :: 		}
0x0078	0x28A5      	GOTO       L_main11
L_main10:
;rf_module_tx.c,71 :: 		else if (rcv==0x71)
0x0079	0x0820      	MOVF       _rcv, 0
0x007A	0x3A71      	XORLW      113
0x007B	0x1D03      	BTFSS      STATUS, 2
0x007C	0x2882      	GOTO       L_main12
;rf_module_tx.c,72 :: 		{rcv1=rcv;
0x007D	0x0820      	MOVF       _rcv, 0
0x007E	0x00A3      	MOVWF      _rcv1
;rf_module_tx.c,73 :: 		TXREG=rcv1;
0x007F	0x0820      	MOVF       _rcv, 0
0x0080	0x0099      	MOVWF      TXREG
;rf_module_tx.c,75 :: 		}
0x0081	0x28A5      	GOTO       L_main13
L_main12:
;rf_module_tx.c,76 :: 		else if (rcv==0x65)
0x0082	0x0820      	MOVF       _rcv, 0
0x0083	0x3A65      	XORLW      101
0x0084	0x1D03      	BTFSS      STATUS, 2
0x0085	0x288B      	GOTO       L_main14
;rf_module_tx.c,77 :: 		{rcv1=rcv;
0x0086	0x0820      	MOVF       _rcv, 0
0x0087	0x00A3      	MOVWF      _rcv1
;rf_module_tx.c,78 :: 		TXREG=rcv1;
0x0088	0x0820      	MOVF       _rcv, 0
0x0089	0x0099      	MOVWF      TXREG
;rf_module_tx.c,80 :: 		}
0x008A	0x28A5      	GOTO       L_main15
L_main14:
;rf_module_tx.c,81 :: 		else if (rcv==0x31)
0x008B	0x0820      	MOVF       _rcv, 0
0x008C	0x3A31      	XORLW      49
0x008D	0x1D03      	BTFSS      STATUS, 2
0x008E	0x2894      	GOTO       L_main16
;rf_module_tx.c,82 :: 		{rcv1=rcv;
0x008F	0x0820      	MOVF       _rcv, 0
0x0090	0x00A3      	MOVWF      _rcv1
;rf_module_tx.c,83 :: 		TXREG=rcv1;
0x0091	0x0820      	MOVF       _rcv, 0
0x0092	0x0099      	MOVWF      TXREG
;rf_module_tx.c,85 :: 		}
0x0093	0x28A5      	GOTO       L_main17
L_main16:
;rf_module_tx.c,86 :: 		else if (rcv==0x32)
0x0094	0x0820      	MOVF       _rcv, 0
0x0095	0x3A32      	XORLW      50
0x0096	0x1D03      	BTFSS      STATUS, 2
0x0097	0x289D      	GOTO       L_main18
;rf_module_tx.c,87 :: 		{rcv1=rcv;
0x0098	0x0820      	MOVF       _rcv, 0
0x0099	0x00A3      	MOVWF      _rcv1
;rf_module_tx.c,88 :: 		TXREG=rcv1;
0x009A	0x0820      	MOVF       _rcv, 0
0x009B	0x0099      	MOVWF      TXREG
;rf_module_tx.c,90 :: 		}
0x009C	0x28A5      	GOTO       L_main19
L_main18:
;rf_module_tx.c,91 :: 		else if (rcv==0x66)
0x009D	0x0820      	MOVF       _rcv, 0
0x009E	0x3A66      	XORLW      102
0x009F	0x1D03      	BTFSS      STATUS, 2
0x00A0	0x28A5      	GOTO       L_main20
;rf_module_tx.c,92 :: 		{rcv1=rcv;
0x00A1	0x0820      	MOVF       _rcv, 0
0x00A2	0x00A3      	MOVWF      _rcv1
;rf_module_tx.c,93 :: 		TXREG=rcv1;
0x00A3	0x0820      	MOVF       _rcv, 0
0x00A4	0x0099      	MOVWF      TXREG
;rf_module_tx.c,95 :: 		}
L_main20:
L_main19:
L_main17:
L_main15:
L_main13:
L_main11:
L_main9:
L_main7:
L_main5:
;rf_module_tx.c,97 :: 		}
0x00A5	0x2854      	GOTO       L_main2
;rf_module_tx.c,101 :: 		}
L_end_main:
0x00A6	0x28A6      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [22]    _interrupt
0x001A       [7]    _____DoICP
0x0021      [12]    ___CC2DW
0x002D      [25]    _InitUART
0x0046      [97]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x000B       [0]    PEIE_bit
0x000B       [0]    GIE_bit
0x000C       [0]    RCIF_bit
0x0018       [0]    CREN_bit
0x0018       [0]    RX9_bit
0x0018       [0]    SPEN_bit
0x0018       [0]    SREN_bit
0x0018       [0]    OERR_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0020       [1]    _rcv
0x0021       [2]    ___DoICPAddr
0x0023       [1]    _rcv1
0x0024       [1]    ___saveSTATUS
0x0025       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x008C       [0]    TXIE_bit
0x008C       [0]    RCIE_bit
0x0098       [0]    TXEN_bit
0x0098       [0]    SYNC_bit
0x0098       [0]    TX9_bit
0x0098       [0]    BRGH_bit
0x0099       [1]    SPBRG
0x011E       [1]    ANSEL
0x011F       [0]    ANS11_bit
0x011F       [1]    ANSELH
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_end_InitUART
  _InitUART
  L_end_interrupt
  _interrupt
  L__interrupt23
  L_end_main
  _main
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_interrupt0
  L_interrupt1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_end_InitUART
  _InitUART
  L_end_interrupt
  _interrupt
  L__interrupt23
  L_end_main
  _main
